---
title: "<span style='color:#f10f10f10; font-size:100pt'><br>
Lab 5 & 6
</span>"
---

```{r message=FALSE, warning=FALSE, include=FALSE}
# Setup ----
## Packages to use ----
if (!require("pacman")) install.packages("pacman")
if (!require("remotes")) install.packages("remotes")
if (!require("mytidyfunctions")) remotes::install_github("JavierMtzRdz/presupuestoR")
pacman::p_load(
  tidyverse, janitor, writexl,
  readxl, scales, mytidyfunctions,
  ggdist, distributional
)

## Set theme ------
theme_set(theme_jmr(
  text = element_text(
    family = "Lato"
    # size = 25
  ),
  panel.grid = element_blank()
))

options(
  ggplot2.discrete.colour = c("#1E81A2", "#FF483B", "#039176", "#FFAC41"),
  ggplot2.discrete.fill = c("#1E81A2", "#FF483B", "#039176", "#FFAC41")
)

## Specify locale ----
Sys.setlocale("LC_ALL", "es_ES.UTF-8")

## Disable scientific notation ----
options(scipen = 999)
```

## Classroom distribution {background-image="frmt/normal-background-1.png"}

![](figs/Lab_seatingplan.png){fig-align="center"}



## Lab 5  {background-image="frmt/normal-background-1.png"}

#### Lab topics:

**Sampling Distribution + CLT**

-   Difference between a statistic & a parameter 
-   A statistic can be a random variable
-   Central Limit Theorem (CLT)


-----

**Review**:

- Populations can be at least partially described by
**population parameters**.
- Statistics or **estimators** are used to estimate
population parameters.
- The **sampling distribution** of a statistic is the distribution of that statistic, considered as a random variable.

------

```{r}
#| echo: false
library(cowplot)
library(datateachr)
library(digest)
library(infer)
library(lubridate)
library(repr)
library(tidyverse)
library(taxyvr)

multi_family_strata <- tax_2019 %>%  
    filter(!is.na(current_land_value),
           current_land_value > 1,
           legal_type == "STRATA",
           zone_category == "Multiple Family Dwelling") %>% 
    select(current_land_value)

sample_10 <- multi_family_strata %>% 
    rep_sample_n(size = 10) %>%
    ungroup() %>% 
    select(current_land_value)


resampled_means_10 <- sample_10 %>% 
    rep_sample_n(size = 10, reps = 2000, replace = TRUE) %>% 
    group_by(replicate) %>% 
    summarise(mean_land_value = mean(current_land_value))

bootstrap_dist_10 <- resampled_means_10 %>% 
    ggplot(aes(x = mean_land_value)) +
    geom_histogram(binwidth = 15000) +
    xlab("Mean Land Value (CAD)") +
    ggtitle("n = 10")



set.seed(8183)
sample_30 <- multi_family_strata %>% 
    rep_sample_n(size = 30) %>%
    ungroup() %>% 
    select(current_land_value)


bootstrap_dist_30 <- sample_30 %>% 
    rep_sample_n(size = 30, reps = 2000, replace = TRUE) %>% 
    group_by(replicate) %>% 
    summarise(mean_land_value = mean(current_land_value)) %>% 
    ggplot(aes(x = mean_land_value)) +
    geom_histogram(binwidth = 15000) +
    xlab("Mean Land Value (CAD)") +
    ggtitle("n = 30")


sample_100 <- multi_family_strata %>% 
    rep_sample_n(size = 100) %>%
    ungroup() %>% 
    select(current_land_value)

bootstrap_dist_100 <- sample_100 %>% 
    rep_sample_n(size = 100, reps = 2000, replace = TRUE) %>% 
    group_by(replicate) %>% 
    summarise(mean_land_value = mean(current_land_value)) %>% 
    ggplot(aes(x = mean_land_value)) +
    geom_histogram(binwidth = 15000) +
    xlab("Mean Land Value (CAD)") +
    ggtitle("n = 100")

set.seed(9869)
sampling_dist_10 <- multi_family_strata %>% 
  rep_sample_n(size = 10, reps = 2000) %>% 
  group_by(replicate) %>% 
  summarise(mean_land_value = mean(current_land_value)) %>% 
  ggplot(aes(x = mean_land_value)) +
  geom_histogram(binwidth = 15000) +
  xlab("x") +
  ggtitle("n = 10")

set.seed(7032)
sampling_dist_30 <- multi_family_strata %>% 
  rep_sample_n(size = 30, reps = 2000) %>% 
  group_by(replicate) %>% 
  summarise(mean_land_value = mean(current_land_value)) %>% 
  ggplot(aes(x = mean_land_value)) +
  geom_histogram(binwidth = 15000) +
  xlab("x") +
  ggtitle("n = 30")

set.seed(8408)
sampling_dist_100 <- multi_family_strata %>% 
  rep_sample_n(size = 100, reps = 2000) %>% 
  group_by(replicate) %>% 
  summarise(mean_land_value = mean(current_land_value)) %>% 
  ggplot(aes(x = mean_land_value)) +
  geom_histogram(binwidth = 15000) +
  xlab("x") +
  ggtitle("n = 100")

bootstrap_10_mean <- round(mean(bootstrap_dist_10$data$mean_land_value), 2)
bootstrap_30_mean <- round(mean(bootstrap_dist_30$data$mean_land_value), 2)
bootstrap_100_mean <- round(mean(bootstrap_dist_100$data$mean_land_value), 2)
sampling_10_mean <- round(mean(sampling_dist_10$data$mean_land_value), 2)
sampling_30_mean <- round(mean(sampling_dist_30$data$mean_land_value), 2)
sampling_100_mean <- round(mean(sampling_dist_100$data$mean_land_value), 2)

bootstrap_dist_row <- plot_grid(bootstrap_dist_10 +
                                  theme(axis.text.x = element_text(angle = 90)) +
                                  scale_x_continuous(breaks = seq(400000, 1200000, 200000),
                                                     limits = c(400000, 1200000)) +
                                  geom_vline(xintercept = bootstrap_10_mean, colour = "red"),
                                bootstrap_dist_30 +
                                  theme(axis.text.x = element_text(angle = 90)) +
                                  scale_x_continuous(breaks = seq(400000, 1200000, 200000),
                                                     limits = c(400000, 1200000)) +
                                  geom_vline(xintercept = bootstrap_30_mean, colour = "red"),
                                bootstrap_dist_100 +
                                  theme(axis.text.x = element_text(angle = 90)) +
                                  scale_x_continuous(breaks = seq(400000, 1200000, 200000),
                                                     limits = c(400000, 1200000)) +
                                  geom_vline(xintercept = bootstrap_100_mean, colour = "red"),
                                ncol = 3)
title <- ggdraw() + 
  draw_label("Bootstrap Sampling Distributions (of Sample Means)",
             fontface = 'bold',
             x = 0,
             hjust = 0) +
  theme(plot.margin = margin(0, 0, 0, 7))
bootstrap_dist_grid <- plot_grid(title,
                                 bootstrap_dist_row,
                                 ncol = 1,
                                 rel_heights = c(0.1, 1))

sampling_dist_row <- plot_grid(sampling_dist_10 +
                                 theme(axis.text.x = element_text(angle = 90)) +
                                 scale_x_continuous(breaks = seq(400000, 1200000, 200000),
                                                    limits = c(400000, 1200000)) +
                                 geom_vline(xintercept = sampling_10_mean, colour = "red"),
                               sampling_dist_30 +
                                 theme(axis.text.x = element_text(angle = 90)) +
                                 scale_x_continuous(breaks = seq(400000, 1200000, 200000),
                                                    limits = c(400000, 1200000)) +
                                 geom_vline(xintercept = sampling_30_mean, colour = "red"),
                               sampling_dist_100 +
                                 theme(axis.text.x = element_text(angle = 90)) +
                                 scale_x_continuous(breaks = seq(400000, 1200000, 200000),
                                                    limits = c(400000, 1200000)) +
                                 geom_vline(xintercept = sampling_100_mean, colour = "red"),
                               ncol = 3)
title <- ggdraw() + 
  draw_label("Sampling Distributions (of Sample Means)",
             fontface = 'bold',
             x = 0,
             hjust = 0) +
  theme(plot.margin = margin(0, 0, 0, 7))

sampling_dist_grid <- plot_grid(title,
                                sampling_dist_row,
                                ncol = 1,
                                rel_heights = c(0.1, 1))



all_dist_grid <- plot_grid(bootstrap_dist_grid, sampling_dist_grid, ncol = 1)

plot_grid(multi_family_strata %>% 
  ggplot(aes(x = current_land_value)) +
  geom_histogram(binwidth = 15000*10) +
    xlab("x") +
  ggtitle("Population distribution"), sampling_dist_grid, ncol = 1)


```


------

**A simple simulation:**

```{r}
#| echo: true
#| code-fold: true
x <- rexp(n = 500, rate = 1)
hist(x, prob=TRUE, breaks=20) 


```

------

**Many simulations:**

```{r}
#| echo: true
#| code-fold: true

n <- 50
N <- 1000
# Create a matrix which stores the 1000 samples of size 50
X <- matrix(data = rexp(N*n, rate = 1), nrow = N, ncol = n)
# Find the mean of each sample
xbar <- apply(X, MARGIN = 1, FUN = mean)

plot(density(xbar))    
```




## Lab 6 {background-image="frmt/normal-background-1.png"}

#### Lab topics:

**Inference: Point Estimates**

-   Understand Point Estimates
-   Learn relevant R functions (loops)
-   Review Random Variables

------

**Review**:

- An **estimator** is a function of the sample, i.e., it is
a rule that tells you how to calculate an estimate
of a parameter from a sample. 
- An **estimate** is a value of an estimator calculated
from a sample.
- Different estimators are possible for the same parameter.
*   We want **unbiased** point estimators. 

------

**Some important estimators**

* Sample mean: $\bar{X} = \frac{X_1+ \cdots+ X_n}{n}$

* Sample Variance: $S^2 = \frac{1}{n-1} \sum_{i= 1}^n (X_i - \bar{X})^2$


------

**Loops:**

```{r}
#| echo: true
#| code-fold: true
n <- 10
N <- 1000
mu <- 105 
sigma <- 12
## Create an empty matrix to store the samples in and an empty vector to store sample variances
samples <- matrix(NA, nrow = N, ncol = n)
sample.variances<-rep(NA, N)

for (i in 1:N) {
  samples[i,] <- rnorm(n, mean=mu, sd=sigma)
  deviation <- samples[i,] - mean(samples[i,])
  sample.variances[i] <- (1/(n-1)) * sum((deviation)^2) 
  }

mean(sample.variances)

hist(sample.variances, prob = TRUE, breaks = 20)
```

------


```{r}
#| echo: true
#| code-fold: true
#| 
# create a matrix which stores the 1000 samples of size 10
X <- matrix(data = rnorm(n*N, mean=mu, sd=sigma), nrow = N, ncol = n)
# find the mean of each sample; MARGIN = 1, indicates rows in the matrix X
sample.variances2 <- apply(X, MARGIN = 1, FUN = var)

mean(sample.variances2)

plot(density(sample.variances2))
```


